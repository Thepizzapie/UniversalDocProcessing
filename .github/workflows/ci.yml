name: CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Lint with ruff
      run: |
        pip install ruff==0.12.9
        ruff check .
      continue-on-error: true
    
    - name: Format check with black
      run: |
        pip install black
        black --check .
      continue-on-error: true
    
    - name: Type check with mypy
      run: |
        pip install mypy types-requests
        mypy . --ignore-missing-imports
      continue-on-error: true
    
    - name: Run tests with coverage
      env:
        OPENAI_API_KEY: sk-test-key-for-ci
        PYTHONPATH: .
      run: |
        pytest tests/ --cov=document_processing --cov=service --cov=sdk --cov-report=xml --cov-report=term-missing --cov-fail-under=60
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Security scan with bandit
      run: |
        bandit -r document_processing/ service/ sdk/ -f json
      continue-on-error: true
    
    - name: Check dependencies with safety
      run: |
        safety check --json
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Build package
      run: |
        python -m pip install --upgrade pip build
        python -m build
    
    - name: Test Docker build
      run: |
        docker build -t doc-ai-framework:test .
        docker run --rm doc-ai-framework:test python -c "import document_processing; print('Package imports successfully')"
